# Common configuration (overridden by profile-specific properties)

# Active profile
spring.profiles.active=dev

# WhatsApp API Configuration
# App ID from your Meta Developer account
whatsapp.app-id=${WHATSAPP_APP_ID:placeholder_app_id}
# App Secret from your Meta Developer account
whatsapp.app-secret=${WHATSAPP_APP_SECRET:placeholder_app_secret}
# Verify token used to validate incoming webhook requests from Meta
whatsapp.webhook-verify-token=${WHATSAPP_WEBHOOK_VERIFY_TOKEN:placeholder_verify_token}
# Your backend's OAuth callback URL (must match exactly the URL registered in Meta Developer Portal)
# This is where Meta will redirect after user authorizes the app
# Path: /api/whatsapp/tenant/oauth/callback
whatsapp.redirect-uri=${WHATSAPP_REDIRECT_URI:http://localhost:8081/api/whatsapp/tenant/oauth/callback}

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/whatsapp
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Properties
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.default_schema=public

# Hibernate 6 Configuration
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Logging
logging.level.com.whatsapp.client=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Server Configuration
server.port=8081

# API Endpoints
# Webhook URL (registered in Meta Developer Portal)
# Path: /api/webhook

# Tenant Management Endpoints
# Initialize connection: POST /api/whatsapp/tenant/connect/{tenantId}?businessName=Business%20Name
# OAuth callback: GET /api/whatsapp/tenant/oauth/callback?code=xxx&state=tenantId
# Complete onboarding: POST /api/whatsapp/tenant/{tenantId}/complete-onboarding
# Register PIN: POST /api/whatsapp/tenant/{tenantId}/register-pin
# Get status: GET /api/whatsapp/tenant/{tenantId}/status
# Get tenant: GET /api/whatsapp/tenant/{tenantId}
# Disconnect: POST /api/whatsapp/tenant/{tenantId}/disconnect

# Messaging Endpoints
# Send text: POST /api/whatsapp/message/{tenantId}/text
# Send template: POST /api/whatsapp/message/{tenantId}/template
# Send media: POST /api/whatsapp/message/{tenantId}/media/{mediaType}
# Mark as read: POST /api/whatsapp/message/{tenantId}/read/{messageId}